{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garyo\\\\Documents\\\\School\\\\youtube_se\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Doughnut } from 'react-chartjs-2';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      console.log('submitted');\n\n      try {\n        let response = await fetch(`http://localhost:5000/?youtubeid=${this.state.youtubeid}`);\n        let json = await response.json();\n        console.log(json);\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          answer: json\n        });\n      } catch (error) {\n        console.log(error);\n        this.setState({\n          loading: false\n        });\n        this.setState({\n          answer: \"error\"\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        youtubeid: event.target.value\n      });\n    };\n\n    this.renderAnswer = () => {\n      if (this.state.answer == \"error\") {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }\n        }, \"An error occurred ensure that you key in the right id.\");\n      } else if (this.state.answer != \"\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, \"Emotion Analysis\"), /*#__PURE__*/React.createElement(Doughnut, {\n          data: {\n            datasets: [{\n              data: [10, 20, 30],\n              backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n            }],\n            labels: ['Red', 'Yellow', 'Blue']\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 12\n          }\n        }, \"Sentiment Analysis\"), /*#__PURE__*/React.createElement(Doughnut, {\n          data: {\n            datasets: [{\n              data: [10, 20, 30],\n              backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n            }],\n            labels: ['Red', 'Yellow', 'Blue']\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return undefined;\n      }\n    };\n\n    this.render = () => {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"App\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 8,\n        lg: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          marginBottom: \"1em\",\n          marginTop: \"0.3em\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \"Youtube Comments Sentiment Emotion\"), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        className: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Control, {\n        onChange: this.handleChange,\n        type: \"search\",\n        placeholder: \"Key in youtube id here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        style: {\n          marginBottom: \"1em\"\n        },\n        variant: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 42\n        }\n      }, \"Scraping and inferencing ... \"), \" \", /*#__PURE__*/React.createElement(Spinner, {\n        as: \"span\",\n        animation: \"border\",\n        size: \"sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 85\n        }\n      })) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 26\n        }\n      }, \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"justify\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, this.state.loading ? undefined : this.renderAnswer())));\n    };\n\n    this.state = {\n      youtubeid: '',\n      answer: '',\n      loading: false\n    };\n    this.colors = [\"#FF3333\", \"#FF9C33\", \"#FFFE33\", \"#7BFF33\", \"#33FFEB\", \"#3388FF\", \"#8733FF\", \"#EA33FF\", \"#FF33A2\", \"#EACBFC\", \"#CBE8FC\", \"#CBFCD2\", \"#FBFCCB\"];\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/garyo/Documents/School/youtube_se/frontend/src/App.js"],"names":["React","Form","Button","Container","Col","Spinner","Doughnut","App","Component","constructor","props","handleSubmit","event","preventDefault","setState","loading","console","log","response","fetch","state","youtubeid","json","answer","error","handleChange","target","value","renderAnswer","datasets","data","backgroundColor","labels","undefined","render","display","justifyContent","marginBottom","marginTop","textAlign","colors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Doughnut } from 'react-chartjs-2';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { youtubeid: '', answer: '', loading: false };\n    this.colors = [\"#FF3333\", \"#FF9C33\", \"#FFFE33\", \"#7BFF33\", \"#33FFEB\", \"#3388FF\", \"#8733FF\", \"#EA33FF\", \"#FF33A2\", \"#EACBFC\", \"#CBE8FC\", \"#CBFCD2\", \"#FBFCCB\"]\n  }\n\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ loading: true })\n    console.log('submitted')\n    try {\n      let response = await fetch(`http://localhost:5000/?youtubeid=${this.state.youtubeid}`)\n      let json = await response.json()\n      console.log(json)\n      this.setState({ loading: false })\n      this.setState({ answer: json })\n    } catch (error) {\n      console.log(error)\n      this.setState({ loading: false })\n      this.setState({ answer: \"error\" })\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({ youtubeid: event.target.value });\n  }\n\n  renderAnswer = () => {\n    if (this.state.answer == \"error\") {\n      return (<span>An error occurred ensure that you key in the right id.</span>)\n    } else if (this.state.answer != \"\") {\n      return (\n        <div >\n          <h2>Emotion Analysis</h2>\n          <Doughnut data={{\n            datasets: [{\n              data: [10, 20, 30],\n              backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n              ]\n            }], labels: [\n              'Red',\n              'Yellow',\n              'Blue'\n            ]\n          }} />\n           <h2>Sentiment Analysis</h2>\n          <Doughnut data={{\n            datasets: [{\n              data: [10, 20, 30],\n              backgroundColor: [\n                '#FF6384',\n                '#36A2EB',\n                '#FFCE56'\n              ]\n            }], labels: [\n              'Red',\n              'Yellow',\n              'Blue'\n            ]\n          }} />\n        </div>\n      )\n    } else {\n      return undefined\n    }\n  }\n\n  render = () => {\n    return (\n      <Container className=\"App\" style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Col md={8} lg={8}>\n          <h1 style={{ marginBottom: \"1em\", marginTop: \"0.3em\" }}>Youtube Comments Sentiment Emotion</h1>\n          <Form onSubmit={this.handleSubmit} className=\"form\">\n            <Form.Group>\n              <Form.Control onChange={this.handleChange} type=\"search\" placeholder=\"Key in youtube id here\" />\n            </Form.Group>\n            <Button type=\"submit\" style={{ marginBottom: \"1em\" }} variant=\"primary\" type=\"submit\">\n              {this.state.loading ? <div><span>Scraping and inferencing ... </span> <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              /></div> : <span>Search</span>}\n            </Button>\n          </Form>\n          <div style={{ textAlign: \"justify\" }}>\n            {this.state.loading ? undefined : this.renderAnswer()}\n          </div>\n        </Col>\n      </Container>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}